---
date: 2016-12-07 23:34
author: mkideal
category: vector
---

{{- $fieldVar := valueAt . 0}}
{{- $type := valueAt . 1}}
{{- $dep := valueAt . 2}}

{{- $length := newString}}
{{- $forVar := newString}}
{{- include_template (joinPath (pwd) "../for_var.go.temp") (slice $dep $forVar)}}
{{- $i := $forVar.Get}}
{{- if eq $dep.Get 0}}
	{{- $length.Set "length"}}
	{{$length}} = len({{$fieldVar}})
{{- else}}
	{{- $length.Set (join "" "length" $dep.String)}}
	{{$length}} := len({{$fieldVar}})
{{- end}}
{{- if context.Config.BoolEnv "use_fixed_encode"}}
if _, err := codec.Enc.EncodeUint32f(w, uint32({{$length}})); err != nil {
	return err
}
{{- else}}
if _, err := codec.Enc.EncodeUint32v(w, uint32({{$length}})); err != nil {
	return err
}
{{- end}}
{{- $newDep := newInt}}
{{- $newDep.Set ($dep.Add 1)}}
for {{$i}} := 0; {{$i}} < {{$length}}; {{$i}}++ {
	{{- $varName := join "" $fieldVar "[" $i "]"}}
	{{- include_template (joinPath (pwd) "encode_type.go.temp") (slice $varName $type.T $newDep)}}
}
